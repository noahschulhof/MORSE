```{r}
library(tidyverse)
library(readxl)
library(ggh4x)
```

```{r}
datasets <- sub("\\..*$", "", list.files('sols'))

merged <- tibble()

for (dataset in datasets){
  
  results <- read_excel(paste0('sols/',
                               dataset,
                               '.xlsx')) %>% 
    filter(lb == 0.8)
  
  
  cutoff <- if_else(dataset == 'GSE103322',
                    500,
                    1000)
  
  results_random <- results %>% 
    filter(type == 'random') %>%
    head(cutoff) %>% 
    mutate(run_number = rep(seq(1, cutoff)))
  
  results_uniform <- results %>% 
    filter(type == 'uniform') %>% 
    head(cutoff) %>% 
    mutate(run_number = rep(seq(1, cutoff)))
  
  random_num_sol <- sapply(results_random$run_number, function(x) length(unique(head(results_random$genes, x))))
  uniform_num_sol <- sapply(results_uniform$run_number, function(x) length(unique(head(results_uniform$genes, x))))
    
  run_counts <- rbind(tibble(num_sol = c(random_num_sol,
                                    uniform_num_sol),
                       Weights = c(rep('MORSE', cutoff),
                                    rep('Uniform Weights', cutoff)),
                       run_number = rep(seq(1, cutoff), 2)),
                      tibble(num_sol = c(0, 0),
                             run_number = c(0, 0),
                             Weights = c('MORSE', 'Uniform Weights'))) %>% 
    mutate(dataset = rep(paste('Dataset:',
                               dataset),
                         2 * cutoff + 2))
  
  
  run_counts$p <- ifelse(seq_along(run_counts$run_number) %% 50 == 0,
                         run_counts$num_sol,
                         NA)
  
  merged <- rbind(merged, run_counts)
  
}
```

```{r}
maxes <- merged %>% 
  group_by(dataset) %>% 
  summarize(max_sol = max(num_sol))


filtered <- merged %>% 
  pivot_wider(id_cols = c(dataset, run_number),
              values_from = num_sol,
              names_from = Weights) %>% 
  janitor::clean_names() %>% 
  left_join(maxes, by = 'dataset') %>% 
  filter(!(uniform_weights == max_sol &
          morse == max_sol &
           row_number() > 2 &
           lag((uniform_weights == max_sol) & (morse == max_sol)))) %>% 
  pivot_longer(cols = c(uniform_weights, morse),
               names_to = 'weights',
               values_to = 'num_sol')
```

```{r}
cutoffs <- filtered %>% 
  group_by(dataset) %>% 
  summarize(max_run = max(run_number)) %>% 
  mutate(cutoff = ifelse(max_run < 5,
                         5,
                         ifelse(max_run < 10,
                                10,
                                ifelse(max_run < 25,
                                       25,
                                       ceiling(max_run/100) * 100))))

merged <- merged %>% 
  left_join(cutoffs, by = 'dataset') %>% 
  filter(run_number <= cutoff)

merged <- merged %>% 
  mutate(p = ifelse(((run_number %% (cutoff/5) == 0) & (run_number != 0)),
         num_sol,
         NA))
```

```{r}
order_by_max <- maxes %>%
  arrange(desc(max_sol)) %>%
  pull(dataset)

max_vals <- merged %>%
  group_by(dataset) %>%
  summarize(max_val = 1.1 * max(num_sol),
            max_run = max(run_number))
```

```{r}
merged %>% 
  ggplot(aes(run_number,
             num_sol)) +
  geom_line(aes(color = Weights),
            linewidth = 1) +
  geom_point(aes(y = p,
                 color = Weights,
                 shape = Weights),
             size = 4,
             na.rm = TRUE) +
  geom_blank(data = max_vals,
             aes(max_run,
                 max_val)) +
  scale_color_brewer(palette = 'Set1') +
  ggpubr::theme_pubr() +
  theme(legend.direction = 'horizontal',
        legend.position = 'top',
        plot.title = element_text(hjust = 0.5,
                                  size = 24),
        plot.subtitle = element_text(hjust = 0.5,
                                     face = 'bold'),
        plot.margin = unit(c(1, 1, 1, 1),
                           'lines'),
        axis.text = element_text(size = 14),
        axis.title = element_text(size = 18),
        legend.text = element_text(size = 14),
        legend.title = element_text(size = 14),
        strip.background = element_rect(fill = 'grey90'),
        strip.text = element_text(face = 'bold',
                                  size = 12)) +
  labs(x = 'Run Number',
       y = 'Number of Distinct Optima Found',
       title = 'Number of Distinct Optima vs. Run Number',
       color = 'Optimization Method',
       shape = 'Optimization Method') +
  facet_wrap(~factor(dataset,
                     levels = order_by_max),
             scales = 'free') +
  scale_y_facet(PANEL == 5,
                breaks = c(0, 5, 10)) +
  scale_y_facet(PANEL %in% c(8, 9),
                breaks = c(0, 1, 2))

ggsave(paste0('plots/madhitter_tabular.png'),
       bg = 'white',
       width = 9,
       height = 9,
       units = 'in')
```