```{r}
library(tidyverse)
library(ggpubr)
```

```{r}
instance <- 'stein15'

results_uniform <- read_delim(paste0('unique_results/',
                                           instance,
                                           '_uniform.txt'),
                              delim = '\n', col_names = FALSE)
results_random <- read_delim(paste0('unique_results/',
                                    instance,
                                    '_random.txt'),
                             delim = '\n', col_names = FALSE)

results_uniform$run_number = seq(1, nrow(results_uniform))

results_random$run_number = seq(1, nrow(results_random))

num_sols_random <- c()
num_sols_uniform <- c()

for (i in seq(1, nrow(results_random))){
  current_random <- results_random %>% 
    filter(run_number <= i)
  current_uniform <- results_uniform %>% 
    filter(run_number <= i)
  
  num_sols_random <- append(num_sols_random, length(unique(current_random$X1)))
  num_sols_uniform <- append(num_sols_uniform, length(unique(current_uniform$X1)))
}

results_uniform$num_sol <- num_sols_uniform
results_random$num_sol <- num_sols_random

row1 = tibble(X1 = '0',
              run_number = 0,
              num_sol = 0)

results_uniform <- add_row(row1,
                           results_uniform)

results_random <- add_row(row1,
                          results_random)
  
merged <- rbind(results_uniform, results_random) %>% 
  mutate(weights = c(rep('Uniform Weights', nrow(results_uniform)),
                     rep('MORSE', nrow(results_random))),
         instance = rep(paste('MIPLIB:',
                              instance),
                        nrow(results_uniform) + nrow(results_random)))
```

```{r}
merged$p <- ifelse(seq_along(merged$run_number) %% ((nrow(merged) - 2)/40) == 0,
                          merged$num_sol,
                          NA)

max_vals <- merged %>%
  group_by(instance) %>%
  summarize(max_val = 1.1 * max(num_sol),
            max_run = max(run_number))
```

```{r}
plot <- merged %>% 
  ggplot(aes(run_number,
             num_sol)) +
  geom_line(aes(color = weights),
            linewidth = 1.5) +
  geom_point(aes(y = p,
             color = weights,
             shape = weights),
             size = 4,
             na.rm = TRUE) +
  geom_blank(data = max_vals,
             aes(max_run,
                 max_val)) +
  scale_color_brewer(palette = 'Set1') +
  scale_x_continuous(expand = c(0.01,0)) +
  scale_y_continuous(limits = c(0, NA)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 20),
        plot.margin = unit(c(1, 1, 1, 1), 'lines'),
        strip.background = element_rect(fill = 'grey90'),
        strip.text = element_text(face = 'bold',
                                  size = 12),
        axis.text = element_text(size = 12),
        legend.position = 'top',
        legend.direction = 'horizontal') +
  labs(x = 'Run Number',
       y = 'Number of Distinct Solutions Found',
       title = 'Number of Distinct Solutions vs. Run Number',
       color = 'Optimization Method',
       shape = 'Optimization Method') +
  facet_wrap(~instance)

if (instance != 'stein15'){
  plot <- plot + scale_y_continuous(expand = c(0, 0))
}

if (instance == 'pigeon-10'){
  plot <- plot +
    scale_y_continuous(breaks = c(0, 2, 4, 6, 8, 10),
                       expand = c(0, 0))
}

ggsave(paste0('plots/',
             instance,
             '_unique.png'),
       plot,
       bg = 'white',
       width = 7.29,
       height = 4.5,
       units = 'in')
```