```{r}
library(tidyverse)
library(ggpubr)
```

```{r}
instance <- 'lp4l'

instance_data <- read_csv(paste0('hamming_results/',
                                   instance,
                                   '.txt')) %>% 
  mutate(weights = str_replace(weights, 'random', 'MORSE'),
         weights = str_replace(weights, 'uniform', 'Uniform Weights'),
         Method = str_replace(Method, 'Solution Pool', 'Arbitrary'))

instance_data <- instance_data %>% 
  mutate(instance = rep(paste('MIPLIB:',
                              instance),
                        nrow(instance_data)))
  
```
```{r}
smoothed_lines <- instance_data %>%
  group_by(Method, weights, instance) %>%
  do(model = loess(avg_hamming ~ sol_number, data = .))

points <- tibble()

instance_data <- smoothed_lines %>% 
  rowwise() %>% 
  do({
    tibble(Method = rep(.$Method,
                        length(fitted(.$model))),
           weights = rep(.$weights,
                         length(fitted(.$model))),
           instance = rep(.$instance,
                          length(fitted(.$model))),
           sol_number = seq(1, length(fitted(.$model))),
           p = fitted(.$model)) %>% 
      left_join(instance_data,
                by = c('Method',
                       'weights',
                       'instance',
                       'sol_number'))
  })

instance_data$p <- ifelse(seq_along(instance_data$p) %% 10 == 0,
                          instance_data$p,
                          NA)
```

```{r}
instance_data %>% 
  ggplot(aes(sol_number,
             avg_hamming,
             color = weights,
             shape = weights)) +
  geom_smooth() +
  geom_point(aes(y = p),
             size = 3,
             na.rm = TRUE) +
  scale_x_continuous(expand = c(0,0),
                     limits = c(0, 100),
                     breaks = c(25, 50, 75, 100),
                     labels = c(25, 50, 75, 100)) +
  scale_y_continuous(expand = c(0, 0),
                     limits = c(0, NA)) +
  scale_color_brewer(palette = 'Set1') +
  theme_minimal() +
  labs(x = '\nRun Number',
       y = 'Average Pairwise Hamming Distance Proportion',
       title = 'Average Pairwise Hamming Distance Proportion vs. Run Number',
       color = 'Optimization Method',
       shape = 'Optimization Method') +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 16),
        plot.margin = unit(c(0.1, 0.25, 0.3, 0.1),
                             'in'),
        strip.background = element_rect(fill = 'grey90'),
        strip.text = element_text(face = 'bold',
                                  size = 12),
        axis.text = element_text(size = 12),
        legend.position = 'top',
        legend.direction = 'horizontal') +
  ggh4x::facet_nested_wrap(. ~ factor(instance) +
                      factor(Method,
                             levels = c('Arbitrary',
                                        'Random Shuffle',
                                        'Greedy')))

ggsave(paste0('plots/',
              instance,
              '_hamming.png'),
       bg = 'white',
       width = 7.29,
       height = 4.5,
       units = 'in')
```