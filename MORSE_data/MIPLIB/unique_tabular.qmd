```{r}
library(tidyverse)
library(digest)
library(ggpubr)
library(ggh4x)
```

```{r}
instances <- unique(str_split_fixed(list.files('unique_results'), '_', 2)[,1])

results <- tibble()

for (instance in instances){
  sols_uniform <- read_csv(paste0('unique_results/',
                                     instance,
                                     '_uniform.txt'),
                              col_names = FALSE) %>% 
    apply(1, digest)
  
  sols_random <- read_csv(paste0('unique_results/',
                                 instance,
                                 '_random.txt'),
                          col_names = FALSE) %>% 
    apply(1, digest)
  
  results_uniform <- tibble(run_number = seq(1, length(sols_uniform)))
  results_random <- tibble(run_number = seq(1, length(sols_random)))
    
  results_random$num_sol <- sapply(results_random$run_number, function(x) length(unique(head(sols_random, x))))
  results_uniform$num_sol <- sapply(results_uniform$run_number, function(x) length(unique(head(sols_uniform, x))))
  
  row1 = tibble(run_number = 0,
                num_sol = 0)

  results_uniform <- add_row(row1,
                             results_uniform)
  
  results_random <- add_row(row1,
                            results_random)
  
  results_merged <- rbind(results_uniform, results_random) %>% 
    mutate(weights = c(rep('Uniform Weights', nrow(results_uniform)),
                       rep('MORSE', nrow(results_random))))
  
  results_merged <- results_merged %>% 
    mutate(instance = rep(paste('MIPLIB:',
                                instance),
                          nrow(results_merged)))
  
  results <- rbind(results, results_merged)
}
```




```{r}
maxes <- results %>% 
  group_by(instance) %>% 
  summarize(max_sol = max(num_sol))


filtered <- results %>% 
  pivot_wider(id_cols = c(instance, run_number),
              values_from = num_sol,
              names_from = weights) %>% 
  janitor::clean_names() %>% 
  left_join(maxes, by = 'instance') %>% 
  filter(!(uniform_weights == max_sol &
          morse == max_sol &
           row_number() > 2 &
           lag((uniform_weights == max_sol) & (morse == max_sol)))) %>% 
  pivot_longer(cols = c(uniform_weights, morse),
               names_to = 'weights',
               values_to = 'num_sol')

```

```{r}
cutoffs <- filtered %>% 
  group_by(instance) %>% 
  summarize(max_run = max(run_number)) %>% 
  mutate(cutoff = ifelse(max_run < 10,
                          10,
                          ifelse(max_run < 25,
                                 25,
                                 ceiling(max_run/100) * 100)))

results <- results %>% 
  left_join(cutoffs, by = 'instance') %>% 
  filter(run_number <= cutoff)

results <- results %>% 
  mutate(p = ifelse(((run_number %% (cutoff/5) == 0) & (run_number != 0)),
         num_sol,
         NA))
```


```{r}
order_by_max <- maxes %>%
  arrange(desc(max_sol)) %>%
  pull(instance)

max_vals <- results %>%
  group_by(instance) %>%
  summarize(max_val = 1.1 * max(num_sol),
            max_run = max(run_number))
```

```{r}
results %>% 
  ggplot(aes(run_number,
             num_sol)) +
  geom_line(aes(color = weights),
            linewidth = 1.5) +
  geom_point(aes(y = p,
                 color = weights,
                 shape = weights),
             size = 4,
             na.rm = TRUE) +
  geom_blank(data = max_vals,
             aes(max_run,
                 max_val)) +
  scale_color_brewer(palette = 'Set1') +
  theme_pubr() +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 24),
        axis.title = element_text(size = 18),
        axis.text = element_text(size = 14),
        plot.margin = unit(c(1, 1, 1, 1), 'lines'),
        strip.background = element_rect(fill = 'grey90'),
        strip.text = element_text(face = 'bold',
                                  size = 14),
        legend.position = 'top',
        legend.direction = 'horizontal',
        legend.text = element_text(size = 14),
        legend.title = element_text(size = 14),
        panel.grid.major = element_line(color = 'gray', linewidth = 0.5),
        panel.grid.minor = element_line(color = 'lightgray', linewidth = 0.25)) +
  labs(x = 'Run Number',
       y = 'Number of Distinct Solutions Found',
       title = 'Number of Distinct Solutions vs. Run Number',
       color = 'Optimization Method',
       shape = 'Optimization Method') +
  facet_wrap(~factor(instance,
                     levels = order_by_max),
             ncol = 4,
             scales = 'free') +
  scale_y_facet(PANEL == 12,
                breaks = c(0, 5, 10)) +
  scale_y_facet(PANEL %in% c(17, 18, 19, 20),
                breaks = c(0, 1, 2),
                limits = c(0, 2.25))
  
  
ggsave('plots/unique_sols_plot.png', width = 12, height = 14, units = 'in', bg = 'white')
```