```{r}
library(tidyverse)
library(ggpubr)
library(ggh4x)
```

```{r}
instances <- unique(str_split_fixed(list.files('unique_results'), '_', 2)[,1])
```

```{r}
results <- tibble()

for (instance in instances){
  results_uniform <- read_delim(paste0('unique_results/',
                                           instance,
                                           '_uniform.txt'),
                                    delim = '\n', col_names = FALSE)
      results_random <- read_delim(paste0('unique_results/',
                                          instance,
                                          '_random.txt'),
                                   delim = '\n', col_names = FALSE)

  results_uniform$run_number = seq(1, nrow(results_uniform))
  
  results_random$run_number = seq(1, nrow(results_random))
  
  num_sols_random <- c()
  num_sols_uniform <- c()
  for (i in seq(1, nrow(results_random))){
    current_random <- results_random %>% 
      filter(run_number <= i)
    current_uniform <- results_uniform %>% 
      filter(run_number <= i)
    
    num_sols_random <- append(num_sols_random, length(unique(current_random$X1)))
    num_sols_uniform <- append(num_sols_uniform, length(unique(current_uniform$X1)))
  }
  
  results_uniform$num_sol <- num_sols_uniform
  results_random$num_sol <- num_sols_random
  
  row1 = tibble(X1 = '0',
                run_number = 0,
                num_sol = 0)
  
  results_uniform <- add_row(row1,
                             results_uniform)
  
  results_random <- add_row(row1,
                            results_random)
  
  results_merged <- rbind(results_uniform, results_random) %>% 
    mutate(weights = c(rep('Uniform Weights', nrow(results_uniform)),
                       rep('MORSE', nrow(results_random))))
  
  results_merged <- results_merged %>% 
    mutate(instance = rep(paste('MIPLIB:',
                                instance),
                          nrow(results_merged)))
  
  results <- rbind(results, results_merged)
}
```

```{r}
instance_counts <- table(results$instance)

nullify <- function(run_num, num_sol, instance){
  nrows <- instance_counts[instance]
  
  if (run_num %% ((nrows - 2)/20) == 0){
    return(num_sol)
  }
  return(NA)
}

results$p <- unlist(Map(nullify, results$run_number, results$num_sol, results$instance))
```

```{r}
order_by_max <- results %>%
  group_by(instance) %>%
  summarize(max_num_sol = max(num_sol)) %>%
  arrange(desc(max_num_sol)) %>%
  pull(instance)

max_vals <- results %>%
  group_by(instance) %>%
  summarize(max_val = 1.1 * max(num_sol),
            max_run = max(run_number))
```

```{r}
results %>% 
  ggplot(aes(run_number,
             num_sol)) +
  geom_line(aes(color = weights),
            linewidth = 1.5) +
  geom_point(aes(y = p,
                 color = weights,
                 shape = weights),
             size = 4,
             na.rm = TRUE) +
  geom_blank(data = max_vals,
             aes(max_run,
                 max_val)) +
  scale_color_brewer(palette = 'Set1') +
  scale_x_continuous(expand = c(0.02,0)) +
  scale_y_continuous(limits = c(0, NA)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 24),
        axis.title = element_text(size = 18),
        axis.text = element_text(size = 14),
        plot.margin = unit(c(1, 1, 1, 1), 'lines'),
        strip.background = element_rect(fill = 'grey90'),
        strip.text = element_text(face = 'bold',
                                  size = 14),
        legend.position = 'top',
        legend.direction = 'horizontal',
        legend.text = element_text(size = 14),
        legend.title = element_text(size = 14)) +
  labs(x = 'Run Number',
       y = 'Number of Distinct Solutions Found',
       title = 'Number of Distinct Solutions vs. Run Number',
       color = 'Optimization Method',
       shape = 'Optimization Method') +
  facet_wrap(~factor(instance,
                     levels = order_by_max),
             ncol = 4,
             scales = 'free') +
  scale_y_facet(PANEL == 11,
                breaks = c(0, 2, 4, 6, 8, 10)) +
  scale_y_facet(PANEL == 12,
                breaks = c(0, 3, 6, 9)) +
  scale_y_facet(PANEL %in% c(16, 17, 18, 19, 20),
                breaks = c(0, 1, 2),
                limits = c(0, 2.25))
  
ggsave('plots/unique_sols_plot.png', width = 12, height = 14, units = 'in', bg = 'white')
```